name: Build Debug target

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.ninja
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        run: |
          if ! command -v curl &> /dev/null
          then
            sudo apt-get update && sudo apt-get install -y curl
          fi
          if ! command -v rustup &> /dev/null
          then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
          else
            rustup default nightly
          fi
        env:
          PATH: ${{ github.workspace }}/.cargo/bin:$PATH

      - name: Install cbindgen
        run: |
          if ! command -v cbindgen &> /dev/null
          then
            cargo install --force cbindgen
          fi

      - name: Install Ninja
        run: |
          if [ ! -d "$HOME/.ninja" ]; then
            mkdir $HOME/.ninja
            curl -L https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip -o $HOME/.ninja/ninja.zip
            unzip $HOME/.ninja/ninja.zip -d $HOME/.ninja
            echo "$HOME/.ninja" >> $GITHUB_PATH
          fi

      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug

      - name: Build target
        run: cmake --build ${{github.workspace}}/build --target qjs run-test262 -j 8

      - name: Test
        run: ./bin/qjs -e 'console.log("Hello, World!")'
